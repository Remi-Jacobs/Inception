services:
  mariadb:
    build:
      context: .
      dockerfile: requirements/mariadb/Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASS: ${DB_PASS}
        DB_ROOT: ${DB_ROOT}
        FORCE_DB_REINIT: ${FORCE_DB_REINIT}
    container_name: mariadb
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_ROOT=${DB_ROOT}
      - FORCE_DB_REINIT=${FORCE_DB_REINIT}
    ports:
      - "3306:3306"
    networks:
      - inception
    volumes:
      - db-volume:/var/lib/mysql
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DB_USER}", "-p${DB_PASS}"]
      timeout: 5s
      retries: 5
      interval: 10s

  wordpress:
    build:
      context: .
      dockerfile: requirements/wordpress/Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASS: ${DB_PASS}
    container_name: wordpress
    depends_on:
      mariadb:
        condition: service_healthy
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - WP_ADMIN_USER=${WP_ADMIN_USER}
      - WP_ADMIN_PASS=${WP_ADMIN_PASS}
      - WP_ADMIN_EMAIL=${WP_ADMIN_EMAIL}
    networks:
      - inception
    volumes:
      - wp-volume:/var/www/
    restart: always

  nginx:
    build:
      context: .
      dockerfile: requirements/nginx/Dockerfile
    container_name: nginx
    depends_on:
      - wordpress
    ports:
      - "443:443"
    networks:
      - inception
    volumes:
      - ../secrets:/etc/nginx/ssl/:ro
      - wp-volume:/var/www/:ro
    restart: always

volumes:
  wp-volume:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/data/wordpress

  db-volume:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/data/mariadb

networks:
  inception:
    driver: bridge
